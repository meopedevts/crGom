package register

import "github.com/meopedevts/crgom/view/layout"
import "github.com/meopedevts/crgom/view/components/button"
import "github.com/meopedevts/crgom/view/components/label"
import "github.com/meopedevts/crgom/view/components/input"
import "github.com/meopedevts/crgom/view/components/form"

script redirectOnSuccess() {
	setTimeout(() => {
		window.location.href = "/login";
	}, 3000)
}

templ RegisterForm() {
	@layout.Layout() {
		<div class="flex flex-col w-full items-center justify-center gap-10">
			<div class="text-2xl font-bold leading-9 tracking-tight text-primary">
				Registre-se
			</div>
			@form.Form(form.FormProps{
				Attributes: templ.Attributes{
					"hx-post":   "/register",
					"hx-target": "#success",
					"hx-swap":   "outerHTML",
				},
			}) {
				<div id="success" class="hidden"></div>
				<div class="flex gap-4">
					@form.FormItem(form.FormItemProps{}) {
						@label.Label(label.LabelProps{
							Attibutes: templ.Attributes{"for": "firstName"},
						}) {
							Nome
						}
						@input.Input(input.InputProps{
							Type: "text",
							Attributes: templ.Attributes{
								"id":           "firstName",
								"name":         "firstName",
								"autocomplete": "given-name",
							},
						})
					}
					@form.FormItem(form.FormItemProps{}) {
						@label.Label(label.LabelProps{
							Attibutes: templ.Attributes{"for": "lastName"},
						}) {
							Sobrenome
						}
						@input.Input(input.InputProps{
							Type: "text",
							Attributes: templ.Attributes{
								"id":           "lastName",
								"name":         "lastName",
								"autocomplete": "family-name",
							},
						})
					}
				</div>
				@form.FormItem(form.FormItemProps{}) {
					@label.Label(label.LabelProps{
						Attibutes: templ.Attributes{"for": "email"},
					}) {
						Email
					}
					@input.Input(input.InputProps{
						Type: "email",
						Attributes: templ.Attributes{
							"id":           "email",
							"name":         "email",
							"autocomplete": "email",
						},
					})
				}
				@button.Button(button.ButtonProps{
					Variant:   button.Variant{}.Default(),
					Size:      button.Size{}.Default(),
					ClassName: "w-full",
				}) {
					Registrar
				}
			}
		</div>
	}
}

templ RegisterSuccess() {
	@redirectOnSuccess()
	<div id="success" class="flex items-center gap-2 mx-auto border-[1px] border-emerald-300 py-4 px-2 text-sm font-semibold text-emerald-700 bg-emerald-200 rounded-md">
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="rgb(4 120 87)"
			stroke="rgb(167 243 208)"
			stroke-width="2"
			stroke-linecap="round"
			stroke-linejoin="round"
			class="lucide lucide-circle-check"
		><circle cx="12" cy="12" r="10"></circle><path d="m9 12 2 2 4-4"></path></svg>
		<span>
			Conta criada com sucesso!
		</span>
	</div>
}
